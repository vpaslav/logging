{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA,wEAAsC;AAEtC,qBAAe,eAAM,CAAC;;;;;;;;;;;ACFtB,+CAAmC;AAEtB,cAAM,GAAG,OAAO,CAAC,YAAY,CAAC;IACzC,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACjF,UAAU,EAAE,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;IAC5C,WAAW,EAAE;QACX,WAAW,EAAE,aAAa;KAC3B;CACF,CAAC,CAAC;;;;;;;;ACTH;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;AAEH,+CAAmC;AACnC,mEAAkC;AAElC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,MAAM,aAAa,GAAG,gBAAM,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;AAE1D,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3B,aAAa,CAAC,IAAI,CAAC,iCAAiC,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;IACzE,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC;AAEH,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC","sources":["webpack://gcplogging/./libs/logger/src/index.ts","webpack://gcplogging/./libs/logger/src/lib/logger.ts","webpack://gcplogging/external commonjs \"express\"","webpack://gcplogging/external commonjs \"winston\"","webpack://gcplogging/webpack/bootstrap","webpack://gcplogging/./apps/service2/src/main.ts"],"sourcesContent":["import { logger } from './lib/logger';\n\nexport default logger;\n","import * as winston from \"winston\";\n\nexport const logger = winston.createLogger({\n  level: \"debug\",\n  format: winston.format.combine(winston.format.timestamp(), winston.format.json()),\n  transports: new winston.transports.Console(),\n  defaultMeta: {\n    environment: \"development\",\n  },\n});\n","module.exports = require(\"express\");","module.exports = require(\"winston\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport * as express from 'express';\nimport logger from '@libs/logger';\n\nconst app = express();\n\nconst serviceLogger = logger.child({service: 'service2'});\n\napp.get('/api', (req, res) => {\n  serviceLogger.info('Incoming request for a service2', { metadata: 123 });\n  res.send({ message: 'Welcome to service2!' });\n});\n\nconst port = process.env.port || 3332;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/api`);\n});\nserver.on('error', console.error);\n"],"names":[],"sourceRoot":""}